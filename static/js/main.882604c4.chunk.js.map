{"version":3,"sources":["authConfig.js","components/SignInButton.jsx","components/SignOutButton.jsx","components/PageLayout.jsx","components/ProfileData.jsx","graph.js","App.jsx","index.js"],"names":["msalConfig","auth","clientId","process","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loggerCallback","level","message","containsPii","LogLevel","Error","console","error","Info","info","Verbose","debug","Warning","warn","loginRequest","scopes","graphConfig","SignInButton","instance","useMsal","className","onClick","loginPopup","catch","e","log","SignOutButton","logout","PageLayout","props","isAuthenticated","useIsAuthenticated","href","children","ProfileData","graphData","style","width","class","givenName","surname","userPrincipalName","mobilePhone","jobTitle","id","accessToken","a","headers","Headers","bearer","append","options","method","fetch","then","response","json","ProfileContent","accounts","useState","setGraphData","name","acquireTokenSilent","account","callMsGraph","MainContent","App","msalInstance","PublicClientApplication","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.882604c4.chunk.js","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { LogLevel } from \"@azure/msal-browser\";\n\n/**\n * Configuration object to be passed to MSAL instance on creation.\n * For a full list of MSAL.js configuration parameters, visit:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md\n */\nexport const msalConfig = {\n  auth: {\n    clientId: process.env.REACT_APP_CLIENT_ID,\n    authority: process.env.REACT_APP_AUTHORITY,\n    redirectUri: process.env.REACT_APP_REDIRECT_URL,\n  },\n  cache: {\n    cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\n    storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\n  },\n  system: {\n    loggerOptions: {\n      loggerCallback: (level, message, containsPii) => {\n        if (containsPii) {\n          return;\n        }\n        switch (level) {\n          case LogLevel.Error:\n            console.error(message);\n            return;\n          case LogLevel.Info:\n            console.info(message);\n            return;\n          case LogLevel.Verbose:\n            console.debug(message);\n            return;\n          case LogLevel.Warning:\n            console.warn(message);\n            return;\n        }\n      },\n    },\n  },\n};\n\n/**\n * Scopes you add here will be prompted for user consent during sign-in.\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\n * For more information about OIDC scopes, visit:\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\n */\nexport const loginRequest = {\n  scopes: [\"User.Read\"],\n};\n\n/**\n * Add here the scopes to request when obtaining an access token for MS Graph API. For more information, see:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\n */\nexport const graphConfig = {\n  graphMeEndpoint: process.env.REACT_APP_GRAPH_ENDPOINT,\n};\n","import React from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from \"../authConfig\";\n\n/**\n * Renders a drop down button with child buttons for logging in with a popup or redirect\n */\nexport const SignInButton = () => {\n    const { instance } = useMsal();\n\n    const handleLogin = (loginType) => {\n            instance.loginPopup(loginRequest).catch(e => {\n                console.log(e);\n            });\n        \n    }\n    return (\n        <button className=\"ui red button\" onClick={() => handleLogin()}>\n            <i className=\"microsoft icon\" />\n            Sign In\n        </button>\n    )\n}","import React from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\n\n/**\n * Renders a sign-out button\n */\nexport const SignOutButton = () => {\n    const { instance } = useMsal();\n    return (\n        <button className=\"ui yellow button\" onClick={() => instance.logout()}>\n            Sign Out\n        </button>\n    )\n}","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport React from \"react\";\n\nimport { useIsAuthenticated } from \"@azure/msal-react\";\nimport { SignInButton } from \"./SignInButton\";\nimport { SignOutButton } from \"./SignOutButton\";\n\n/**\n * Renders the navbar component with a sign-in or sign-out button depending on whether or not a user is authenticated\n * @param props \n */\nexport const PageLayout = (props) => {\n    const isAuthenticated = useIsAuthenticated();\n\n    return (\n        <>\n            <div className=\"ui inverted pointing menu\">\n                <a href=\"/msal_react/\" className=\"item \">\n                    <i  className=\"react icon blue\"/>\n                    BlackAdi\n                </a>\n                <div className=\"right menu\">\n                    <span className=\"item\">\n                    MSAL Sample - Microsoft Identity Platform\n                    </span>\n                    { isAuthenticated ? <SignOutButton /> : <SignInButton /> }\n                </div>\n            </div>\n\n\n            <h2><center>Welcome to the Land of OAuth - <i className=\"smile outline icon\"/></center></h2>\n            <br />\n            <br />\n            {props.children}\n        </>\n    );\n};\n","import React from \"react\";\n\n/**\n * Renders information about the user obtained from MS Graph\n * @param props \n */\nexport const ProfileData = (props) => {\n    console.log(props.graphData);\n\n    return (\n        <div className=\"ui people shape\">\n            <div className=\"sides\">\n                <div className=\"active side\">\n                    <div className=\"ui card red\" style={{width: \"100%\"}}>\n                        <div class=\"image\">\n                            <i className=\"user icon\" />\n                        </div>\n                        <div class=\"content\">\n                            <div class=\"header\">\n                                <i className=\"microsoft icon\" />\n                                Azure AD Profile Info\n                            </div>\n                            <br/>\n                            <div className=\"description\">\n                                <p><strong>First Name: </strong> {props.graphData.givenName}</p>\n                                <p><strong>Last Name: </strong> {props.graphData.surname}</p>\n                                <p><strong>Email: </strong> {props.graphData.userPrincipalName}</p>\n                                <p><strong>Mobile Phone: </strong> {props.graphData.mobilePhone}</p>\n                                <p><strong>Job: </strong> {props.graphData.jobTitle}</p>\n                                <p><strong>Id: </strong> {props.graphData.id}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n    );\n};","import { graphConfig } from \"./authConfig\";\n\n/**\n * Attaches a given access token to a MS Graph API call. Returns information about the user\n * @param accessToken \n */\nexport async function callMsGraph(accessToken) {\n    const headers = new Headers();\n    const bearer = `Bearer ${accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n\n    const options = {\n        method: \"GET\",\n        headers: headers\n    };\n\n    return fetch(graphConfig.graphMeEndpoint, options)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n","import React, { useState } from \"react\";\nimport {\n  AuthenticatedTemplate,\n  UnauthenticatedTemplate,\n  useMsal,\n} from \"@azure/msal-react\";\nimport { loginRequest } from \"./authConfig\";\nimport { PageLayout } from \"./components/PageLayout\";\nimport { ProfileData } from \"./components/ProfileData\";\nimport { callMsGraph } from \"./graph\";\nimport \"./styles/App.css\";\n\n/**\n * Renders information about the signed-in user or a button to retrieve data about the user\n */\nconst ProfileContent = () => {\n  const { instance, accounts } = useMsal();\n  const [graphData, setGraphData] = useState(null);\n\n  function RequestProfileData() {\n    // Silently acquires an access token which is then attached to a request for MS Graph data\n    instance\n      .acquireTokenSilent({\n        ...loginRequest,\n        account: accounts[0],\n      })\n      .then((response) => {\n        callMsGraph(response.accessToken).then((response) =>\n          setGraphData(response)\n        );\n      });\n\n  }\n\n  console.log(\"acoounts:\" + accounts[0]);\n  return (\n    <>\n        <h2 className=\"ui header brown\">Welcome {accounts[0].name}</h2>\n        {graphData ? (\n          <ProfileData graphData={graphData} />\n        ) : (\n          <button className=\"ui primary button\" onClick={RequestProfileData}>\n            <i className=\"microsoft icon\" />\n            Get Profile Information\n          </button>\n        )}\n\n    </>\n  );\n};\n\n/**\n * If a user is authenticated the ProfileContent component above is rendered. Otherwise a message indicating a user is not authenticated is rendered.\n */\nconst MainContent = () => {\n  //console.log(\"secret: \"+process.env.REACT_APP_CLIENT_ID);\n  return (\n    <div className=\"App\">\n      <AuthenticatedTemplate>\n        <ProfileContent />\n      </AuthenticatedTemplate>\n\n      <UnauthenticatedTemplate>\n        <div className=\"ui container\">\n          <h5 className=\"ui floating message yellow\"><i className=\"sign-in icon\"></i>\n            Please sign-in to see your profile information.\n          </h5>\n        </div>\n        \n      </UnauthenticatedTemplate>\n    </div>\n  );\n};\n\nexport default function App() {\n  return (\n    <PageLayout>\n      <MainContent />\n    </PageLayout>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App.jsx\";\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { MsalProvider } from \"@azure/msal-react\";\nimport { msalConfig } from \"./authConfig\";\n\n/**\n * Initialize a PublicClientApplication instance which is provided to the MsalProvider component\n * We recommend initializing this outside of your root component to ensure it is not re-initialized on re-renders\n */\nconst msalInstance = new PublicClientApplication(msalConfig);\n\n/**\n * We recommend wrapping most or all of your components in the MsalProvider component. It's best to render the MsalProvider as close to the root as possible.\n */\n\nReactDOM.render(\n  <React.StrictMode>\n    <MsalProvider instance={msalInstance}>\n      <App />\n    </MsalProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}